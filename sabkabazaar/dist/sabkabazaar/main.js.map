{"version":3,"sources":["./src/app/productscontainer/mobile-category/mobile-category.component.ts","./src/app/productscontainer/mobile-category/mobile-category.component.html","./src/app/categories/category/category.component.ts","./src/app/categories/category/category.component.html","./src/environments/environment.ts","./src/app/categories/categories.component.ts","./src/app/categories/categories.component.html","./src/app/test/test.component.ts","./src/app/test/test.component.html","./src/app/productscontainer/productcategory/productcategory.component.ts","./src/app/productscontainer/productcategory/productcategory.component.html","./src/app/sign-in/sign-in.component.ts","./src/app/sign-in/sign-in.component.html","./src/app/app.component.ts","./src/app/app.component.html","./src/app/master.service.ts","./src/app/app.module.ts","./src/app/productscontainer/products/products.component.html","./src/app/productscontainer/products/products.component.ts","./src/app/cart/cart.component.ts","./src/app/cart/cart.component.html","./src/app/sign-up/sign-up.component.ts","./src/app/sign-up/sign-up.component.html","./src/app/header/header.component.ts","./src/app/header/header.component.html","./src/app/footer/footer.component.ts","./src/app/footer/footer.component.html","./src/app/container/container.component.ts","./src/app/container/container.component.html","./src/app/productscontainer/productscontainer.component.ts","./src/app/productscontainer/productscontainer.component.html","./src/app/app-routing.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { AfterContentInit, AfterViewInit, Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { MasterService } from 'src/app/master.service';\nimport { category } from 'src/app/models/category.model';\n\n@Component({\n  selector: 'app-mobile-category',\n  templateUrl: './mobile-category.component.html',\n  styleUrls: ['./mobile-category.component.scss']\n})\nexport class MobileCategoryComponent implements OnInit, AfterContentInit {\n\n  @Input() categories : category[] = [];\n\n  @Output() categorySelected = new EventEmitter<string>();\n\n  // products: product[] = [];\n\n  constructor(public msService: MasterService) { }\n\n  ngAfterContentInit(): void {\n    // this.categorySelected.emit('');\n    // console.log(this.categorySelected)\n  }\n\n  ngOnInit(): void {\n    \n  }\n\n  ToggleCategory(id : any){\n    console.log('category Id : ' + id)\n    this.categorySelected.emit(id)\n  }\n\n\n}\n","<mat-select class=\"category-select\"  placeholder=\"All\" [(value)]=\"categorySelected\" (selectionChange)=\"ToggleCategory($event)\">\n    <mat-option value=\"\" tabindex=\"0\" [routerLink]=\"['/products']\">All</mat-option>\n    <mat-option *ngFor=\"let category of categories\" [value]=\"category.id\" tabindex=\"0\" [routerLink]=\"['/products']\" [queryParams]=\"{ category : category.id }\">\n        {{category.name}}\n    </mat-option>\n</mat-select>","import { Component, Input, OnInit } from '@angular/core';\nimport { category } from 'src/app/models/category.model';\n\n@Component({\n  selector: 'app-category',\n  templateUrl: './category.component.html',\n  styleUrls: ['./category.component.scss']\n})\nexport class CategoryComponent implements OnInit {\n\n  @Input('categoryData') category : category;\n\n  @Input() isEven : boolean;\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<article tabindex=\"0\" class=\"category-section\">\n    <div class=\"category\" [ngClass]=\"{'flexReverse' : !isEven}\">\n        <img [src]=\"category.hasOwnProperty('imageUrl') ? category.imageUrl.replace('static','assets') : 'assets/images/category/noimage.jpg'\" [alt]=\"category.description\">\n        <div class=\"category-content\">\n            <h1>{{category.name}}</h1>\n            <div class=\"category-description\">{{category.description}}</div>\n            <button class=\"category-navigate-btn\">\n                <a class=\"abc\" [routerLink]=\"['products']\">{{category.key}}</a>\n            </button>\n        </div>\n    </div>\n</article>","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  // apiURL:'http://localhost:3000'\n  apiURL:'/api'\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { ChangeDetectorRef, Component, OnInit, QueryList, ViewChildren } from '@angular/core';\n\nimport { Observable, from, pipe, fromEvent } from 'rxjs';\nimport { map, filter, tap } from 'rxjs/operators'\n\n\nimport { MasterService } from '../master.service';\n\nimport {\n  MatCarouselSlideComponent,\n  Orientation\n} from 'ng-mat-carousel';\nimport { ThemePalette } from '@angular/material/core';\nimport { category } from '../models/category.model';\nimport { banner } from '../models/banner.model'\nimport { Router } from '@angular/router';\n\n\n@Component({\n  selector: 'app-categories',\n  templateUrl: './categories.component.html',\n  styleUrls: ['./categories.component.scss']\n})\nexport class CategoriesComponent implements OnInit {\n\n  categories: category[] = [];\n\n  banners: banner[] = [];\n\n\n\n  images: any = [];\n  myCarouselImages = [];\n\n  mySlideOptions = { items: 1, dots: true, nav: true };\n  myCarouselOptions = { items: 3, dots: true, nav: true };\n\n\n  @ViewChildren(MatCarouselSlideComponent) public carouselSlides: QueryList<\n    MatCarouselSlideComponent\n  > | undefined;\n\n  public slidesList = new Array<never>(5);\n  public showContent = false;\n  public parentHeight = '100%';\n  public timings = '250ms ease-in';\n  public autoplay = true;\n  public interval = 5000;\n  public loop = true;\n  public hideArrows = false;\n  public hideIndicators = false;\n  public color : ThemePalette = 'primary';\n  public maxWidth = 'auto';\n  public maintainAspectRatio = true;\n  public proportion = 25;\n  public slideHeight = '200px';\n  public slides = this.slidesList.length;\n  public overlayColor = '#ffffff00';\n  public hideOverlay = false;\n  public useKeyboard = true;\n  public useMouseWheel = false;\n  public orientation: Orientation = 'ltr';\n  public log: string[] = [];\n  public darkMode = false;\n\n\n  constructor(private msService: MasterService, private router : Router) { \n    console.log('form data--->', this.router.getCurrentNavigation()?.extras.state);\n  }\n\n  ngOnInit(): void {\n\n    this.msService.getCategories()\n      .subscribe((data: category[]) => {\n        this.categories = data;\n        const CATEGRORY_DATA : category[] = this.categories.map(cat => ({\n          ...cat,\n          key: `Explore  ${cat.key}`\n        }));\n        this.categories = CATEGRORY_DATA;\n        console.log(this.categories);\n        this.msService.mainCategories = this.categories.map((x : category) => x.name)\n      });\n\n\n    this.msService.getBanners()\n      .subscribe((data: banner[]) => {\n        this.banners = data;\n        this.banners.forEach((b: banner) => {\n          this.images.push(b.bannerImageUrl.replace('static', 'assets'));\n        })\n        // console.log(this.banners);\n        // console.log(this.images);\n      });\n  }\n\n  public resetSlides(): void {\n    //this.carouselSlides.forEach(item => (item.disabled = false));\n  }\n\n  public onChange(index: any) {\n    this.log.push(`MatCarousel#change emitted with index ${index}`);\n  }\n}\n","<section class=\"carousal\">\n  <div class=\"demo-carousel\" [style.height]=\"parentHeight\">\n    <mat-carousel #matCarousel [timings]=\"timings\" [autoplay]=\"autoplay\" [interval]=\"interval\" [loop]=\"loop\"\n      [hideArrows]=\"hideArrows\" [hideIndicators]=\"hideIndicators\" [color]=\"color\" [lazyLoad]=\"true\"\n      [maxWidth]=\"maxWidth\" [proportion]=\"proportion\" [useKeyboard]=\"useKeyboard\" [useMouseWheel]=\"useMouseWheel\"\n      [orientation]=\"orientation\" [slides]=\"slides\" [maintainAspectRatio]=\"maintainAspectRatio\"\n      [slideHeight]=\"slideHeight\" (change)=\"onChange($event)\">\n      <mat-carousel-slide #matCarouselSlide *ngFor=\"let slide of slidesList; let i = index\"\n        [image]=\"banners[i].bannerImageUrl.replace('static','assets')\" [overlayColor]=\"overlayColor\"\n        [hideOverlay]=\"hideOverlay\">\n      </mat-carousel-slide>\n    </mat-carousel>\n  </div>\n\n</section>\n<section *ngFor=\"let category of categories;let even = even; let odd = odd\">\n  <app-category [categoryData]='category' [isEven]='even'></app-category>\n</section>\n\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-test',\n  templateUrl: './test.component.html',\n  styleUrls: ['./test.component.sass']\n})\n\nexport class TestComponent implements OnInit {\n\n  banners : any;\n\n  constructor() { }\n\n  ngOnInit(): void {\n    \n\n  }\n\n\n}\n","<p>test works!</p>\n","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { MasterService } from 'src/app/master.service';\nimport { category } from 'src/app/models/category.model';\n\n@Component({\n  selector: 'app-productcategory',\n  templateUrl: './productcategory.component.html',\n  styleUrls: ['./productcategory.component.scss']\n})\nexport class ProductcategoryComponent implements OnInit {\n\n  @Output() categorySelected = new EventEmitter<string>();\n\n  @Input() categories : category[] = [];\n\n  constructor(public msService : MasterService, private router : Router) { }\n\n  ngOnInit(): void {\n    this.msService.getCategories()\n      .subscribe((data: category[]) => {\n        this.categories = data;\n      });\n  }\n\n  ToggleCategory(id : string){\n    console.log('category Id : ' + id)\n    this.categorySelected.emit(id)\n  }\n\n}\n","<!-- (click)=\"ToggleCategory(category.id)\" -->\n<article *ngFor=\"let category of categories\">\n    <button tabindex=\"0\" [routerLink]=\"['/products']\"  routerLinkActive=\"active-category\"  [queryParams]=\"{ category : category.id }\">{{category.name}}</button>\n</article>","import { Component, OnInit } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-sign-in',\n  templateUrl: './sign-in.component.html',\n  styleUrls: ['./sign-in.component.scss']\n})\nexport class SignInComponent implements OnInit {\n\n  signInForm: FormGroup = new FormGroup({});\n\n \n\n  constructor(private route : Router) { }\n\n  ngOnInit(): void {\n    this.signInForm = new FormGroup({\n      email: new FormControl(null,[Validators.required, Validators.email]),\n      password: new FormControl(null,[Validators.required,Validators.minLength(6)])\n    });\n  }\n\n  get signin() {\n    console.log(this.signInForm.controls)\n    return this.signInForm.controls;\n  }\n\n  onSubmit() {\n    console.log(this.signInForm);\n    this.route.navigate([''], { state: this.signInForm.value });\n  }\n\n}\n","<section class=\"signin-section\">\n    <article class=\"signin-content\">\n        <h1>Login</h1>\n        <h3>Get access to your Orders, Wishlist and Recommendations.</h3>\n    </article>\n    <article class=\"signin-form\">\n        <form [formGroup]=\"signInForm\" class=\"signin-form\" (ngSubmit)=\"onSubmit()\">\n            <div class=\"form-group\">\n                <mat-form-field>\n                    <mat-label>Email</mat-label>\n                    <input matInput formControlName=\"email\">\n                    <mat-error *ngIf=\"signin.email.touched && signin.email.errors?.required\">\n                        Email is required\n                      </mat-error>\n                      <mat-error *ngIf=\"signin.email.touched && signin.email.errors?.email\">\n                        Please enter valid email\n                      </mat-error>\n                  </mat-form-field>\n            </div>\n            <div class=\"form-group\">\n                <mat-form-field>\n                    <mat-label>Password</mat-label>\n                    <input matInput type=\"password\" formControlName=\"password\">\n                    <mat-error *ngIf=\"signin.password.touched && signin.password.errors?.required\">\n                        Password is required\n                      </mat-error>\n                      <mat-error *ngIf=\"signin.password.touched && signin.password.errors?.minlength\">\n                        Password length should be atleast 6\n                      </mat-error>\n                  </mat-form-field>\n            </div>\n            <button class=\"primary\" type=\"submit\" [disabled]='!signInForm.valid'>Login</button>\n        </form>\n    </article>\n    \n</section>\n","import { Component, OnInit } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { MasterService } from './master.service';\n\n\ndeclare var $:any\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent implements OnInit {\n  title = 'Sabka Bazaar';\n\n  constructor(public master : MasterService){}\n\n  ngOnInit() {\n    this.IntervalObservable().subscribe\n  }\n\n  IntervalObservable() : Observable<number> {\n    let count = 0;\n    return new Observable( \n      next => {\n        count++;\n      }\n    )\n  }\n\n}\n","<app-header></app-header>\r\n<section class=\"container\">\r\n    <router-outlet></router-outlet>\r\n    <section id=\"cartSection\" class=\"cart-section\">\r\n        <app-cart></app-cart>\r\n    </section>\r\n</section>\r\n<app-footer></app-footer>\r\n<div id=\"backDrop\" (click)=\"master.openCartSub.next(false)\"></div>","import { Injectable } from '@angular/core';\n\nimport { HttpClient } from '@angular/common/http';\nimport { banner } from './models/banner.model';\nimport { category } from './models/category.model';\nimport { product } from './models/product.model';\nimport { Subject } from 'rxjs';\nimport { Cart } from './models/cart.model';\n\nimport { environment } from '../environments/environment'\n\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class MasterService {\n\n  openCartSub = new Subject<boolean>();\n\n  cartItems : Cart[] = [];\n\n  constructor(private http: HttpClient) { }\n\n  mainCategories : any = []\n\n  //rootURL = '/api';\n\n  /* private vars and dont keep any type data */\n\n  private rootURL= environment.apiURL;\n\n  getBanners() {\n    return this.http.get<banner[]>(this.rootURL + '/banners');\n  }\n\n\n  getCategories() {\n    return this.http.get<category[]>(this.rootURL + '/categories');\n  }\n\n\n  getProducts() {\n    return this.http.get<product[]>(this.rootURL + '/products');\n  }\n\n  addToCart(productId : string){\n    return this.http.post<string>(this.rootURL + '/addToCart',{productID: productId})\n  }\n\n}\n","import { HttpClientModule } from '@angular/common/http';\nimport { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { TestComponent } from './test/test.component';\nimport { HeaderComponent } from './header/header.component';\nimport { ContainerComponent } from './container/container.component';\nimport { CategoriesComponent } from './categories/categories.component';\nimport { FooterComponent } from './footer/footer.component';\nimport { MatCarouselModule } from 'ng-mat-carousel';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MatInputModule } from '@angular/material/input';\n\nimport { ProductsComponent } from './productscontainer/products/products.component';\nimport { ProductcategoryComponent } from './productscontainer/productcategory/productcategory.component';\nimport { ProductscontainerComponent } from './productscontainer/productscontainer.component';\nimport { CategoryComponent } from './categories/category/category.component';\n\nimport {MatSelectModule} from '@angular/material/select';\nimport {MatSidenavModule} from '@angular/material/sidenav';\nimport {MatListModule} from '@angular/material/list';\n\n\nimport { MobileCategoryComponent } from './productscontainer/mobile-category/mobile-category.component';\nimport { SignUpComponent } from './sign-up/sign-up.component';\nimport { SignInComponent } from './sign-in/sign-in.component';\nimport { CartComponent } from './cart/cart.component';\n\n\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    TestComponent,\n    HeaderComponent,\n    ContainerComponent,\n    CategoriesComponent,\n    FooterComponent,\n    ProductsComponent,\n    ProductcategoryComponent,\n    ProductscontainerComponent,\n    CategoryComponent,\n    MobileCategoryComponent,\n    SignUpComponent,\n    SignInComponent,\n    CartComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n    MatCarouselModule.forRoot(),\n    BrowserAnimationsModule,\n    MatSelectModule,\n    FormsModule,\n    ReactiveFormsModule,\n    MatInputModule,\n    MatListModule,\n    MatSidenavModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","\n<section class=\"main-section\">\n    <ng-container *ngFor=\"let product of products\">\n        <div class=\"parent-card\" tabindex=\"0\" *ngIf=\"product.visible || product.visible==undefined\">\n            <div class=\"main-card\">\n                <h3>{{product.name}}</h3>\n                <div class=\"image-desc\">\n                    <img [src]=\"product.imageURL.replace('static','assets')\" alt=\"\">\n                    <div class=\"product-description\">\n                        <div class=\"description\">{{product.description}}</div>\n                        <button class=\"addToCart-btn primary\" (click)=\"AddToCart(product)\"> {{'Buy Now @' + product.price}} </button>\n                    </div>\n                </div>\n                <div class=\"button-price\">\n                    <span class=\"mrp-span\">{{'MRP ' + product.price}}</span>\n                    <button class=\"addToCart-btn primary\" (click)=\"AddToCart(product)\"> Buy Now </button>\n                </div>\n            </div>\n        </div>\n    </ng-container>\n    \n</section>\n","import { Component, DoCheck, Input, OnInit } from '@angular/core';\nimport { ActivatedRoute, Params } from '@angular/router';\nimport { Cart } from 'src/app/models/cart.model';\nimport { MasterService } from '../../master.service';\nimport { product } from '../../models/product.model';\n\n@Component({\n  selector: 'app-products',\n  templateUrl: './products.component.html',\n  styleUrls: ['./products.component.scss']\n})\nexport class ProductsComponent implements OnInit {\n\n  @Input() categoryId: string = '';\n\n  products: product[] = [];\n\n  constructor(public msService: MasterService, private route: ActivatedRoute) { }\n\n\n  ngOnInit(): void {\n\n    this.msService.getProducts()\n      .subscribe((data: product[]) => {\n        this.products = data;\n        let categoryId = this.route.snapshot.queryParams['category'];\n        if (categoryId != undefined) {\n          this.FilterProductsByCategory(categoryId);\n        }\n      });\n\n    this.route.queryParams\n      .subscribe(\n        (params: Params) => {\n          let categoryID = params['category'];\n          console.log(this.products)\n          console.log(categoryID);\n          this.FilterProductsByCategory(categoryID);\n        }\n      )\n  }\n\n  FilterProductsByCategory(categoryID: string) {\n    this.products.map(pD => {\n      pD['visible'] = ((categoryID == pD.category || categoryID == undefined) ? true : false);\n    });\n    console.log(this.products)\n  }\n\n  AddToCart(product : product){\n    this.msService.addToCart(product.id)\n      .subscribe(\n        res => {\n          console.log(res);\n          let cart : Cart = {...product};\n          this.msService.cartItems.push(cart)\n        },\n        err => console.log(err)\n      )\n  }\n\n  ngOnDestroy() {\n    console.log(\"destroyed!!!\")\n  }\n\n}\n","import { Component, ElementRef, OnInit, ViewChild } from '@angular/core';\nimport { MatDrawer } from '@angular/material/sidenav';\nimport { MasterService } from '../master.service';\n\n@Component({\n  selector: 'app-cart',\n  templateUrl: './cart.component.html',\n  styleUrls: ['./cart.component.scss']\n})\nexport class CartComponent implements OnInit {\n\n  showFiller = false;\n\n  @ViewChild('drawer') public drawer: MatDrawer;\n\n  constructor(private master : MasterService) { }\n\n  ngOnInit(): void {\n    let current = this;\n    this.master.openCartSub\n      .subscribe(\n        res => {\n          this.ToggleDrawer()\n        },\n        err => {\n\n        }\n      )\n  }\n\n  ToggleDrawer(){\n    let backDROP = document.getElementById('backDrop');\n    let cartSection = document.getElementById('cartSection');\n    if(backDROP && (backDROP.style.display.toLocaleLowerCase() == \"none\" || backDROP.style.display.toLocaleLowerCase() == \"\")){\n      if(cartSection){\n        cartSection.style.zIndex = \"1\";\n      }\n      backDROP.style.display = \"block\"\n    }\n    else if(backDROP){\n      if(cartSection){\n        cartSection.style.zIndex = \"-1\";\n      }\n      backDROP.style.display = \"none\"\n    }\n    this.drawer.toggle()\n  }\n\n  ngAfterViewInit(){\n    console.log(this.drawer);\n  }\n\n}\n","<mat-drawer-container class=\"example-container\" autosize>\n    <mat-drawer #drawer class=\"example-sidenav\" mode=\"side\" position=\"end\">\n      <article id=\"cart-header\">\n          <div class=\"cartHeader\">\n              <h1>{{'My Cart'}}</h1>\n            </div>\n            <div tabindex=\"0\" role=\"button\" id=\"closeCart\" (click)=\"ToggleDrawer()\">\n                <span>X</span>\n            </div>\n      </article>\n    </mat-drawer>\n  \n  </mat-drawer-container>","import { HttpClient } from '@angular/common/http';\nimport { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-sign-up',\n  templateUrl: './sign-up.component.html',\n  styleUrls: ['./sign-up.component.scss']\n})\nexport class SignUpComponent implements OnInit {\n\n  signUpForm: FormGroup = new FormGroup({});\n\n\n\n  constructor(private http: HttpClient, private formBuilder: FormBuilder, private route : Router) { }\n\n  ngOnInit(): void {\n    /* this.signUpForm = new FormGroup({\n      firstName: new FormControl(null, Validators.required),\n      lastName: new FormControl(null, Validators.required),\n      email: new FormControl(null, [Validators.required, Validators.email]),\n      password: new FormControl(null, [Validators.required, Validators.minLength(6), Validators.pattern(\"^(?=.*[A-Za-z])(?=.*\\d)[A-Za-z\\d]{8,}$\")]),\n      confirmpassword: new FormControl(null, [Validators.required, this.validateAreEqual.bind(this)])\n    }); */\n\n    this.signUpForm = this.formBuilder.group({\n      firstName: ['', Validators.required],\n      lastName: ['', Validators.required],\n      email: ['', [Validators.required, Validators.email]],\n      password: ['', [Validators.required, Validators.pattern(\"^(?=.*?[A-Za-z])(?=.*?[0-9]).{6,}$\")]],\n      confirmPassword: ['', Validators.required]\n    }, {\n      validator: this.MustMatch('password', 'confirmPassword')\n    });\n    debugger\n  }\n\n  get signup() {\n    return this.signUpForm.controls;\n  }\n\n  MustMatch(controlName: string, matchingControlName: string) {\n    return (formGroup: FormGroup) => {\n      const control = formGroup.controls[controlName];\n      const matchingControl = formGroup.controls[matchingControlName];\n\n      if (matchingControl.errors && !matchingControl.errors.mustMatch) {\n        // return if another validator has already found an error on the matchingControl\n        return;\n      }\n\n      // set error on matchingControl if validation fails\n      if (control.value !== matchingControl.value) {\n        matchingControl.setErrors({ mustMatch: true });\n      } else {\n        matchingControl.setErrors(null);\n      }\n    }\n  }\n\n\n  onSubmit() {\n    console.log(this.signUpForm);\n    this.route.navigate([''], { state: this.signUpForm.value });\n  }\n}\n","<section class=\"signup-section\">\n    <article class=\"signup-content\">\n        <h1>Signup</h1>\n        <h3>We do not share your personal details to anyone.</h3>\n    </article>\n    <article class=\"signup-form\">\n        <form [formGroup]=\"signUpForm\" class=\"signup-form\" (ngSubmit)=\"onSubmit()\">\n            <div class=\"form-group\">\n                <mat-form-field>\n                    <mat-label>First Name</mat-label>\n                    <input matInput formControlName=\"firstName\">\n                    <mat-error aria-live *ngIf=\"!signup.firstName.valid\">\n                        First name is required\n                      </mat-error>\n                  </mat-form-field>\n            </div>\n            <div class=\"form-group\">\n                <mat-form-field>\n                    <mat-label>Last Name</mat-label>\n                    <input matInput formControlName=\"lastName\">\n                    <mat-error aria-live *ngIf=\"!signup.lastName.valid\">\n                        Last name is required\n                      </mat-error>\n                  </mat-form-field>\n            </div>\n            <div class=\"form-group\">\n                <mat-form-field>\n                    <mat-label>Email</mat-label>\n                    <input matInput formControlName=\"email\">\n                    <mat-error aria-live *ngIf=\"!signup.email.valid\">\n                        Email is not valid\n                      </mat-error>\n                  </mat-form-field>\n            </div>\n            <div class=\"form-group\">\n                <mat-form-field>\n                    <mat-label>Password</mat-label>\n                    <input matInput type=\"password\" formControlName=\"password\">\n                    <mat-error aria-live *ngIf=\"signup.password.touched && signup.password.errors?.required\">\n                        Password can't be empty\n                      </mat-error>\n                      <mat-error aria-live *ngIf=\"signup.password.touched && signup.password.errors?.pattern\">\n                        Password should have minimum 6 characters, at least 1 letter and 1 number\n                      </mat-error>\n                  </mat-form-field>\n            </div>\n            <div class=\"form-group\">\n                <mat-form-field>\n                    <mat-label>Confirm Password</mat-label>\n                    <input matInput type=\"password\" formControlName=\"confirmPassword\">\n                      <mat-error aria-live *ngIf=\"signup.confirmPassword.touched && signup.confirmPassword.errors?.mustMatch\">\n                        Password doesn't match\n                      </mat-error>\n                  </mat-form-field>\n            </div>\n            <button class=\"primary\" type=\"submit\" [disabled]='!signUpForm.valid'>Signup</button>\n        </form>\n    </article>\n    \n</section>\n","import { Component, OnInit } from '@angular/core';\nimport { MasterService } from '../master.service';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.scss']\n})\nexport class HeaderComponent implements OnInit {\n\n  constructor(public master : MasterService) { \n  }\n\n  ngOnInit(): void {\n  }\n\n  openCart(){\n    this.master.openCartSub.next(true);\n  }\n\n\n}\n","<header class=\"header\">\n    <section class=\"header-container\">\n        <div class=\"header_logo_div\" tabindex=\"0\">\n            <img src=\"assets/images/logo.png\" alt=\"App Logo\">\n        </div>\n        <div class=\"header_menu_div\">\n            <nav class=\"header_menu_div_nav\">\n                <a href=\"#\" [routerLink]=\"''\">Home</a>\n                <a href=\"#\" [routerLink]=\"'products'\">Products</a>\n            </nav>\n        </div>\n        <div class=\"header_login_cart_div\">\n            <div class=\"header_login_cart_div_login\">\n                <nav class=\"small-nav\">\n                    <a href=\"#\" [routerLink]=\"'signIn'\">SignIn</a>\n                    <a href=\"#\" [routerLink]=\"'signUp'\">Register</a>\n                </nav>\n            </div>\n            <div tabindex=\"0\" role=\"button\" class=\"header_login_cart_div_cart\" (click)=\"openCart()\">\n                <img src=\"assets/images/cart.svg\" alt=\"cart\">\n                <span>{{ master.cartItems.length + ' items'}}</span>\n            </div>\n        </div>\n    </section>\n</header>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-footer',\n  templateUrl: './footer.component.html',\n  styleUrls: ['./footer.component.scss']\n})\nexport class FooterComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<footer>\n    <div class=\"footer-content\">\n        Copyright @ 2021 Sabka Bazaar Supplies Pvt Ltd\n    </div>\n</footer>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-container',\n  templateUrl: './container.component.html',\n  styleUrls: ['./container.component.scss']\n})\nexport class ContainerComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<section class=\"container\">\n    <app-header></app-header>\n    <app-categories></app-categories>\n    <app-footer></app-footer>\n</section>\n","import { Component, OnInit } from '@angular/core';\nimport { MasterService } from '../master.service';\nimport { category } from '../models/category.model';\n\n\n@Component({\n  selector: 'app-productscontainer',\n  templateUrl: './productscontainer.component.html',\n  styleUrls: ['./productscontainer.component.scss']\n})\nexport class ProductscontainerComponent implements OnInit {\n\n  categorySelected : string = '';\n\n  categories : category[] = [];\n\n  // products: product[] = [];\n\n  constructor(public msService: MasterService) { }\n\n  ngOnInit(): void {\n    this.msService.getCategories()\n      .subscribe((data: category[]) => {\n        this.categories = data;\n      });\n  }\n\n  getCategory(event : string){\n    console.log(event)\n    this.categorySelected = event;\n  }\n}\n","<section class=\"products-section\">\n    <section class=\"mobile-category\">\n        <app-mobile-category [categories]=\"categories\" (categorySelected)=\"getCategory($event)\"></app-mobile-category>\n    </section>\n    \n    <aside class=\"left-nav\" tabindex=\"0\">\n        <app-productcategory [categories]=\"categories\" (categorySelected)=\"getCategory($event)\"></app-productcategory>\n    </aside>\n    \n    <section class=\"main-section-container\">\n        <app-products [categoryId]=\"categorySelected\"></app-products>\n    </section>\n    \n\n</section>\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { CategoriesComponent } from './categories/categories.component';\nimport { ProductscontainerComponent } from './productscontainer/productscontainer.component';\nimport { SignInComponent } from './sign-in/sign-in.component';\nimport { SignUpComponent } from './sign-up/sign-up.component';\n\nconst routes: Routes = [\n  { path : '', component : CategoriesComponent},\n  { path : 'products', component : ProductscontainerComponent},\n  { path : 'products/:cID', component : ProductscontainerComponent},\n  { path : 'signUp', component : SignUpComponent},\n  { path : 'signIn', component : SignInComponent},\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}